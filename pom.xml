<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Main BOM file defines organization, licenses, developers, repositories,
         shared properties, dependency management, plugin management  -->
<!--
    <parent>
      <groupId>edu.utexas.tacc.tapis</groupId>
      <artifactId>tapis-bom</artifactId>
      <version>1.5-SNAPSHOT</version>
      &lt;!&ndash; Set empty relative path to avoid maven warning and&ndash;&gt;
      &lt;!&ndash;   ensure parent is found in local repository if that&ndash;&gt;
      &lt;!&ndash;   is the only place it exists.&ndash;&gt;
      <relativePath></relativePath>
    </parent>
-->

    <artifactId>tapisV2</artifactId>
    <groupId>edu.utexas.tacc.tapis</groupId>
    <version>0.0.4</version>
    <packaging>pom</packaging>

    <name>TACC Tapis Java Parent POM</name>
    <description>Super POM file for all TAPIS java services</description>

    <scm>
        <connection>scm:git:https://github.com/tapis-project/tapis-java.git</connection>
        <url>https://github.com/tapis-project/tapis-java</url>
    </scm>

    <properties>
      <!-- Most properties set in parent tapis-bom   -->
      <!-- Properties can be overridden here         -->
      <!-- Version of tapis-shared-java to be used.  -->
      <!-- Individual projects may want to override. -->
      <tapis-shared-java.version>1.1-SNAPSHOT</tapis-shared-java.version>
      <tapis-client-java.version>1.1-SNAPSHOT</tapis-client-java.version>
      <!-- Java version -->
      <java-source.version>1.13</java-source.version>
      <java-target.version>1.13</java-target.version>

      <!-- Maven compiler plugin Java release support -->
      <maven-compiler-plugin-release>13</maven-compiler-plugin-release>

      <!-- Version of tapis-shared-java to be used. Individual projects may want to override. -->
      <tapis-shared-java.version>1.1-SNAPSHOT</tapis-shared-java.version>

      <!-- Source encoding -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

      <!-- Capture the UTC build time for filtering use in children poms -->
      <!-- There's some goofy behavior that prevent the direct use of    -->
      <!-- maven property, so we format and reassign it.                 -->
      <build.timestamp>${maven.build.timestamp}</build.timestamp>
      <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>

      <!-- Below are the version numbers for all software on which we explicitly depend.  -->
      <!-- If a library or plugin appears as a dependency in some pom file, then that     -->
      <!-- artifact's version number should be in the lists below for easy management and -->
      <!-- access.  Version numbers are organized into 2 lists, one for plugins and the   -->
      <!-- other for library dependencies.                                                -->
      <!--                                                                                -->
      <!-- Note that we specify the versions of the base maven plugins so that they       -->
      <!-- don't change from underneath us.  This approach requires us to manually        -->
      <!-- upgrade the plugins we use; a reasonable upgrade cycle would be every 6-12     -->
      <!-- months.  See http://maven.apache.org/plugins/index.html for latest plugin      -->
      <!-- listing.  Last upgrade occurred on 4/24/2017.                                  -->
      <!--                                                                                -->
      <!--                    PLEASE KEEP THESE LISTS ALPHABETIZED                        -->
      <!-- PLUGIN Versions (in alphabetical order) -->
      <buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
      <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
      <flyway-maven-plugin.version>6.0.8</flyway-maven-plugin.version>
      <jooq-codegen-maven-plugin.version>3.13.1</jooq-codegen-maven-plugin.version>
      <google-maven-replacer-plugin.version>1.5.3</google-maven-replacer-plugin.version>
      <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
      <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
      <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
      <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
      <maven-javadoc-plugin.version>3.0.0</maven-javadoc-plugin.version>
      <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
      <maven-shade-plugin.version>3.2.1</maven-shade-plugin.version>
      <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
      <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
      <maven-war-plugin.version>3.2.3</maven-war-plugin.version>
      <nexus-staging-maven-plugin.version>1.6.7</nexus-staging-maven-plugin.version>
      <openapi-generator-maven-plugin.version>4.1.3</openapi-generator-maven-plugin.version>
      <swagger-maven-plugin.version>2.0.10</swagger-maven-plugin.version>

      <!-- LIBRARY Versions (in alphabetical order) -->
      <activemq-client.version>5.15.13</activemq-client.version>
      <amqp-client.version>5.7.3</amqp-client.version>
      <args4j.version>2.33</args4j.version>
      <commons-codec.version>1.12</commons-codec.version>
      <commons-dbutils.version>1.7</commons-dbutils.version>
      <commons-lang3.version>3.9</commons-lang3.version>
      <commons-io.version>2.6</commons-io.version>
      <commons-math3.version>3.6.1</commons-math3.version>
      <flywaydb.version>6.0.8</flywaydb.version>
      <gsissh.version>0.12.1</gsissh.version>
      <gson.version>2.8.6</gson.version>
      <gson-fire.version>1.8.3</gson-fire.version>
      <guava.version>28.0-jre</guava.version>
      <hikariCP.version>3.3.1</hikariCP.version>
      <hk2.version>2.6.1</hk2.version>
      <httpclient.version>4.5.8</httpclient.version>
      <httpmime.version>4.5.8</httpmime.version>
      <jackson.version>2.10.1</jackson.version>
      <jakarta.servlet-api.version>4.0.2</jakarta.servlet-api.version>          <!-- jersey group -->
      <jargon-core.version>4.3.0.1-RELEASE</jargon-core.version>
      <javacc.version>7.0.6</javacc.version>
      <javax.activation.activation.version>1.1.1</javax.activation.activation.version>
      <javax.annotation.version>1.3.2</javax.annotation.version>
      <javax.mail.version>1.6.2</javax.mail.version>
      <javax.ws.rs-api.version>2.1</javax.ws.rs-api.version>
      <javax.xml.bind.jaxb-api.version>2.1</javax.xml.bind.jaxb-api.version>
      <javax.xml.bind.jaxb-core.version>2.3.0.1</javax.xml.bind.jaxb-core.version>
      <javax.xml.bind.jaxb-impl.version>2.3.2</javax.xml.bind.jaxb-impl.version>
      <jaxb-api.version>2.3.1</jaxb-api.version>
      <jcraft.version>0.1.55</jcraft.version>
      <jersey-container-servlet.version>2.30</jersey-container-servlet.version> <!-- jersey group -->
      <jetty-server.version>9.4.0.M1</jetty-server.version>
      <jjwt.version>0.10.7</jjwt.version>
      <jooq.version>3.13.1</jooq.version>
      <junit.version>4.12</junit.version>
      <kubernetes-client.version>8.0.0</kubernetes-client.version>
      <logback-classic.version>1.2.3</logback-classic.version>  <!-- Logback supplies the proper version of sl4j -->
      <metrics-core.version>3.2.3</metrics-core.version>
      <mockito-core.version>3.0.0</mockito-core.version>
      <okhttp.version>2.7.5</okhttp.version>
      <okhttp3.version>4.2.2</okhttp3.version>
      <org.everit.json.schema.version>1.12.1</org.everit.json.schema.version>
      <org.json.version>20180130</org.json.version>
      <p6spy.version>3.8.3</p6spy.version>
      <postgresql.version>42.2.6</postgresql.version>
      <rabbitmq.version>3.6.11</rabbitmq.version>
      <shiro.version>1.4.1</shiro.version>
      <slf4j-api.version>1.7.25</slf4j-api.version>
      <snakeyaml.version>1.26</snakeyaml.version>
      <software.amazon.awssdk.version>2.13.11</software.amazon.awssdk.version> <!-- v2 of aws sdk-->
      <com.amazonaws.version>1.11.327</com.amazonaws.version> <!-- v1 of aws sdk-->
      <sshj.version>0.27.0</sshj.version>
      <statefulj.version>3.0</statefulj.version>
      <swagger-annotations.version>2.0.10</swagger-annotations.version>
      <swagger-annotations1.version>1.5.24</swagger-annotations1.version>
      <swagger-jaxrs2.version>2.0.10</swagger-jaxrs2.version>
      <swagger-ui.version>3.23.8</swagger-ui.version>
      <testng.version>6.14.3</testng.version>
      <threetenbp.version>1.3.5</threetenbp.version>
      <vault-java-driver.version>5.1.0-SNAPSHOT</vault-java-driver.version>
      <!-- A NOTE ABOUT INTER-DEPENDENCIES                                                 -->
      <!--                                                                                 -->
      <!-- When an above library version is followed by a comment for the form "XX group"  -->
      <!-- it indicates that there are interdependencies between all libraries marked with -->
      <!-- the same group.  This usually doesn't matter because most projects include the  -->
      <!-- root library and it includes all its dependencies automatically.  Sometimes,    -->
      <!-- however, another project may include one of the root library's dependencies     -->
      <!-- without including the root library.  In this case, we usually prefer to use the -->
      <!-- same version of the dependency library as the root library.  This is especially -->
      <!-- true when the projects are ultimately packaged together in, for example, a WAR  -->
      <!-- file.  The group comment in the above version list is used to signal that the   -->
      <!-- libraries are interdependent and version changes in to members of the group     -->
      <!-- should be coordinated.                                                          -->

    </properties>

  <repositories>
    <!-- Include snapshot repo so we can pickup snapshot version of parent bom -->
    <repository>
      <id>oss.sonatype.org-snapshot</id>
      <url>http://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <build>
      <!-- Below pluginManagement section defines default versions and settings (such as executions) -->
      <!--  that will be used for any project that specifies this bom file as its parent.            -->
      <!--  When including plugins a project need only specify groupId and artifactId.               -->
      <!-- Settings may be overridden.                                                               -->
      <pluginManagement>
        <!-- Document what each plugin is used for -->
        <plugins>
          <!-- This plugin is used to compile the project's sources. -->
          <!-- It also forces the IDE to use the specified Java version -->
          <!-- when creating new projects. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven-compiler-plugin.version}</version>
            <configuration>
              <!-- The release tells maven what version of -->
              <!-- the Java compiler to use internally. -->
              <release>${maven-compiler-plugin-release}</release>
              <source>${java-source.version}</source>
              <target>${java-target.version}</target>
            </configuration>
          </plugin>

          <!-- This plugin is used to build war files. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>${maven-war-plugin.version}</version>
            <configuration>
              <warSourceDirectory>src/main/webapp</warSourceDirectory>
              <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
          </plugin>

          <!-- Capture the git commit hash and branch identifiers.  -->
          <!-- We use the plugin only for git and depend on regular -->
          <!-- maven filtering for timestamp and code version. We   -->
          <!-- could use this plugin to update jar and war manifest -->
          <!-- files, but we use separate resource file filtering   -->
          <!-- instead. See the resources element below for         -->
          <!-- filtering details.                                   -->
          <!-- Puts the commit hash in resources                    -->

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>${buildnumber-maven-plugin.version}</version>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>create</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <doCheck>false</doCheck>
              <doUpdate>false</doUpdate>
              <shortRevisionLength>8</shortRevisionLength>
            </configuration>
          </plugin>

          <!-- For running unit tests    -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <configuration>
              <groups>unit</groups>
            </configuration>
          </plugin>

          <!-- For running integration tests with maven. The tests
               need to be annotated like @Test(groups={'integration'})
               Use "mvn verify" to run -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven-failsafe-plugin.version}</version>
            <configuration>
              <trimStackTrace>false</trimStackTrace>
              <groups>integration</groups>
              <includes>
                <include>**/*Test*.java</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- For sourcemaps to be created with the released code -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-maven-plugin</artifactId>
            <version>${flyway-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>flyway-clean-database</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>clean</goal>
                  <goal>migrate</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen-maven</artifactId>
            <version>${jooq-codegen-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>jooq-codegen</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- For building a FAT jar file. Downstream APIs will need to specify the transformers/mainClass that is commented out below     -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>${maven-shade-plugin.version}</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <filters>
                    <filter>
                      <artifact>*:*</artifact>
                      <excludes>
                        <exclude>module-info.class</exclude>
                        <exclude>META-INF/*.SF</exclude>
                        <exclude>META-INF/*.DSA</exclude>
                        <exclude>META-INF/*.RSA</exclude>
                      </excludes>
                    </filter>
                  </filters>
                  <!--                                <transformers>-->
                  <!--                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">-->
                  <!--                                        <mainClass>edu.utexas.tacc.tapis.files.api.FilesApplication</mainClass>-->
                  <!--                                    </transformer>-->
                  <!--                                </transformers>-->
                </configuration>
              </execution>
            </executions>
          </plugin>


          <!-- Generate the openapi documentation from the code -->
          <plugin>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-maven-plugin</artifactId>
            <version>${swagger-maven-plugin.version}</version>
          </plugin>

          <!-- Javadocs, required to push to maven central     -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven-javadoc-plugin.version}</version>
            <configuration>
              <doclint>none</doclint>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!--  For releases to maven central          -->
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>${nexus-staging-maven-plugin.version}</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
          </plugin>


          <!-- For signing the releases to maven central with a GPG key               -->
          <!-- By default skip signing so sub-projects do not need to explicitly skip -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <configuration>
              <gpgArguments>
                <arg>--batch</arg>
              </gpgArguments>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>

      </pluginManagement>


    <!-- buildnumber-maven-plugin updates properties in resources -->
    <resources>
      <!-- Write the project version number to the specified file. -->
      <!-- Setting the targetPath puts the file into the jar at the -->
      <!-- specified root-relative directory. The the modified -->
      <!-- tapis.version file is always copied to the target/classes -->
      <!-- directory. Do the same for other data that we want to -->
      <!-- capture. A jar and war file will contain these files -->
      <!-- as long as the templated files are in the configured -->
      <!-- directory in the child project. -->
      <resource>
        <directory>src/main/resources</directory>
        <targetPath>.</targetPath>
        <filtering>true</filtering>
        <includes>
          <include>**/tapis.version</include>
          <include>**/git.info</include>
          <include>**/build.time</include>
        </includes>
      </resource>

      <!-- For some reason, we have to tell maven, surefire or testng -->
      <!-- that all main/resources need to be copied to some target -->
      <!-- directory. We also have to tell them to NOT undo filtering -->
      <!-- for the files that we explicitly filter above. Good stuff. -->
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*</include>
        </includes>
        <excludes>
          <exclude>**/tapis.version</exclude>
          <exclude>**/git.info</exclude>
          <exclude>**/build.time</exclude>
        </excludes>
      </resource>
    </resources>
  </build>


  <!-- Below dependencyManagement section defines default versions and settings (such as scope) -->
  <!--  that will be used for any project that imports this bom file or specifies this bom file -->
  <!--  as its parent.                                                                          -->
  <!--  So when defining dependencies a project need only specify groupId and artifactId        -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.rabbitmq</groupId>
        <artifactId>amqp-client</artifactId>
        <version>${amqp-client.version}</version>
      </dependency>
      <dependency>
        <groupId>args4j</groupId>
        <artifactId>args4j</artifactId>
        <version>${args4j.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-dbutils</groupId>
        <artifactId>commons-dbutils</artifactId>
        <version>${commons-dbutils.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <version>${flywaydb.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-bom</artifactId>
        <version>${com.amazonaws.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>bom</artifactId>
        <version>${software.amazon.awssdk.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.gsonfire</groupId>
        <artifactId>gson-fire</artifactId>
        <version>${gson-fire.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP</artifactId>
        <version>${hikariCP.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
        <version>${jakarta.servlet-api.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.activation</groupId>
        <artifactId>activation</artifactId>
        <version>${javax.activation.activation.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>${javax.annotation.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.mail</groupId>
        <artifactId>javax.mail</artifactId>
        <version>${javax.mail.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>${javax.ws.rs-api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-core</artifactId>
        <version>${javax.xml.bind.jaxb-core.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>${javax.xml.bind.jaxb-impl.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${jaxb-api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.jcraft</groupId>
        <artifactId>jsch</artifactId>
        <version>${jcraft.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.hk2</groupId>
        <artifactId>hk2</artifactId>
        <version>${hk2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.test-framework.providers</groupId>
        <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
        <version>${jersey-container-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.ext</groupId>
        <artifactId>jersey-bean-validation</artifactId>
        <version>${jersey-container-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-json-jackson</artifactId>
        <version>${jersey-container-servlet.version}</version>
      </dependency>
      <!-- Jersey will default to the moxy json parser if it's found on the classpath -->
      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-moxy</artifactId>
        <version>${jersey-container-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-multipart</artifactId>
        <version>${jersey-container-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-grizzly2-http</artifactId>
        <version>${jersey-container-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.test-framework</groupId>
        <artifactId>jersey-test-framework-core</artifactId>
        <version>${jersey-container-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.inject</groupId>
        <artifactId>jersey-hk2</artifactId>
        <version>${jersey-container-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.core</groupId>
        <artifactId>jersey-common</artifactId>
        <version>${jersey-container-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-servlet</artifactId>
        <version>${jersey-container-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-servlet-core</artifactId>
        <version>${jersey-container-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-api</artifactId>
        <version>${jjwt.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-impl</artifactId>
        <version>${jjwt.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-jackson</artifactId>
        <version>${jjwt.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <!-- Logback supplies the proper version of sl4j -->
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback-classic.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>${metrics-core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito-core.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp</groupId>
        <artifactId>okhttp</artifactId>
        <version>${okhttp.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp</groupId>
        <artifactId>logging-interceptor</artifactId>
        <version>${okhttp.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>okhttp</artifactId>
        <version>${okhttp3.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>logging-interceptor</artifactId>
        <version>${okhttp3.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.everit-org.json-schema</groupId>
        <artifactId>org.everit.json.schema</artifactId>
        <version>${org.everit.json.schema.version}</version>
      </dependency>
      <dependency>
        <groupId>p6spy</groupId>
        <artifactId>p6spy</artifactId>
        <version>${p6spy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>
      <dependency>
        <!-- Logback supplies the proper version of sl4j -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-annotations1.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-jaxrs2.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-jaxrs2</artifactId>
        <version>${swagger-jaxrs2.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-core</artifactId>
        <version>${swagger-jaxrs2.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-jaxrs2-servlet-initializer</artifactId>
        <version>${swagger-jaxrs2.version}</version>
      </dependency>
      <dependency>
        <!-- There are only test dependencies on testng -->
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>${testng.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.threeten</groupId>
        <artifactId>threetenbp</artifactId>
        <version>${threetenbp.version}</version>
      </dependency>
      <dependency>
        <groupId>edu.utexas.tacc.tapis</groupId>
        <artifactId>tapis-shared-lib</artifactId>
        <version>1.1-SNAPSHOT</version>
        <scope>system</scope>
        <systemPath>${project.basedir}/lib/tapis-shared-lib-1.1-SNAPSHOT.jar</systemPath>
      </dependency>
      <dependency>
        <groupId>edu.utexas.tacc.tapis</groupId>
        <artifactId>tapis-shared-api-lib</artifactId>
        <version>1.1-SNAPSHOT</version>
        <scope>system</scope>
        <systemPath>${project.basedir}/lib/tapis-shared-api-1.1-SNAPSHOT.jar</systemPath>
      </dependency>
<!--
      <dependency>
        <groupId>edu.utexas.tacc.tapis</groupId>
        <artifactId>tapis-vault-java-driver</artifactId>
        <version>5.1.0-SNAPSHOT</version>
      </dependency>
-->
      <dependency>
        <groupId>io.kubernetes</groupId>
        <artifactId>client-java</artifactId>
        <version>${kubernetes-client.version}</version>
      </dependency>
      <dependency>
        <groupId>net.java.dev.javacc</groupId>
        <artifactId>javacc</artifactId>
        <version>${javacc.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-client</artifactId>
        <version>${activemq-client.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <!-- Global Dependencies -->
  <!--                     -->
  <!-- Only add dependencies here that are used by EVERY submodule. -->
  <dependencies>
    <dependency>
    <!-- There are only test dependencies on testng -->
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
    </dependency>
  </dependencies>

  <modules>
    <module>tapis-metaapi</module>
    <module>tapis-metalib</module>
    <module>tapis-metawrkr</module>
  </modules>

</project>
